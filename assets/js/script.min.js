(()=>{"use strict";console.log("Email Validator is working"),document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("email-validator-btn"),t=document.querySelector(".email-validator-popup"),a=document.querySelector(".email-validator-overlay"),r=document.querySelector(".close-popup"),n=document.getElementById("email-validator-form"),o=document.getElementById("email-input"),i=document.getElementById("email-result"),l="hidden",d="ajax-loading";e.addEventListener("click",(()=>{a.classList.remove(l),t.classList.remove(l)})),[a,r].forEach((e=>e.addEventListener("click",(()=>{a.classList.add(l),t.classList.add(l)})))),n.addEventListener("submit",(function(e){e.preventDefault();const t=o.value.trim();if(!t)return void(i.innerHTML=`<p class='is-error'>${emailValidatorData.valid_message}</p>`);n.classList.add(d),i.innerHTML="<p>Validating...</p>";const a=new FormData;a.append("action","email_validator"),a.append("nonce",emailValidatorData.nonce),a.append("email",t),fetch(emailValidatorData.ajax_url,{method:"POST",body:a}).then((e=>e.json())).then((e=>{e.success?i.innerHTML=function(e){if(!e.success||!e.data)return"<p>Error: Invalid JSON format</p>";let t=e.data;if(t.error)return`<p>Error: ${t.error.message} (Code: ${t.error.code})</p>`;let a=`\n            <p>${emailValidatorData.result_message}</p>\n            <table>\n        `;a+="<tr><th>Key</th><th>Value</th></tr>";for(let e in t)"object"==typeof t[e]&&null!==t[e]&&"text"in t[e]?a+=`<tr><td>${e}</td><td>${t[e].text}</td></tr>`:a+=`<tr><td>${e}</td><td>${t[e]}</td></tr>`;return a+="</table>",a}(e):i.innerHTML=`<p class='is-error'>${e.data.message}</p>`,console.log(e)})).catch((e=>{i.innerHTML=`<p class='is-error'>${emailValidatorData.error_message}</p>`,console.error("Error:",e)})).finally((()=>{setTimeout((()=>{n.classList.remove(d)}),300)}))}))}))})();
//# sourceMappingURL=script.min.js.map